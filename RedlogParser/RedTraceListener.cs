//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/andrew/RiderProjects/adt-solver/RedlogParser/RedTrace.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RedTraceParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public interface IRedTraceListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] RedTraceParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] RedTraceParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] RedTraceParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] RedTraceParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBody([NotNull] RedTraceParser.BodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBody([NotNull] RedTraceParser.BodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.mul"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMul([NotNull] RedTraceParser.MulContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.mul"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMul([NotNull] RedTraceParser.MulContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.ncgong"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNcgong([NotNull] RedTraceParser.NcgongContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.ncgong"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNcgong([NotNull] RedTraceParser.NcgongContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] RedTraceParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] RedTraceParser.FactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.power"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPower([NotNull] RedTraceParser.PowerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.power"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPower([NotNull] RedTraceParser.PowerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNum([NotNull] RedTraceParser.NumContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNum([NotNull] RedTraceParser.NumContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] RedTraceParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] RedTraceParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] RedTraceParser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] RedTraceParser.IdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.and"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd([NotNull] RedTraceParser.AndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.and"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd([NotNull] RedTraceParser.AndContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.or"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr([NotNull] RedTraceParser.OrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.or"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr([NotNull] RedTraceParser.OrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.equal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqual([NotNull] RedTraceParser.EqualContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.equal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqual([NotNull] RedTraceParser.EqualContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.gr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGr([NotNull] RedTraceParser.GrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.gr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGr([NotNull] RedTraceParser.GrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.ls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLs([NotNull] RedTraceParser.LsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.ls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLs([NotNull] RedTraceParser.LsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.neq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNeq([NotNull] RedTraceParser.NeqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.neq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNeq([NotNull] RedTraceParser.NeqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.leq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeq([NotNull] RedTraceParser.LeqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.leq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeq([NotNull] RedTraceParser.LeqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.geq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeq([NotNull] RedTraceParser.GeqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.geq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeq([NotNull] RedTraceParser.GeqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.ball"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBall([NotNull] RedTraceParser.BallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.ball"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBall([NotNull] RedTraceParser.BallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.nil"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNil([NotNull] RedTraceParser.NilContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.nil"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNil([NotNull] RedTraceParser.NilContext context);
}
