//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/andrew/RiderProjects/adt-solver/RedlogParser/RedTrace.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRedTraceListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class RedTraceBaseListener : IRedTraceListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] RedTraceParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] RedTraceParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] RedTraceParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] RedTraceParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBody([NotNull] RedTraceParser.BodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBody([NotNull] RedTraceParser.BodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.mul"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMul([NotNull] RedTraceParser.MulContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.mul"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMul([NotNull] RedTraceParser.MulContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.ncgong"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNcgong([NotNull] RedTraceParser.NcgongContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.ncgong"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNcgong([NotNull] RedTraceParser.NcgongContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor([NotNull] RedTraceParser.FactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor([NotNull] RedTraceParser.FactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPower([NotNull] RedTraceParser.PowerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPower([NotNull] RedTraceParser.PowerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNum([NotNull] RedTraceParser.NumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNum([NotNull] RedTraceParser.NumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] RedTraceParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] RedTraceParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId([NotNull] RedTraceParser.IdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId([NotNull] RedTraceParser.IdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.and"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd([NotNull] RedTraceParser.AndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.and"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd([NotNull] RedTraceParser.AndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.or"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOr([NotNull] RedTraceParser.OrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.or"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOr([NotNull] RedTraceParser.OrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.equal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqual([NotNull] RedTraceParser.EqualContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.equal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqual([NotNull] RedTraceParser.EqualContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.gr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGr([NotNull] RedTraceParser.GrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.gr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGr([NotNull] RedTraceParser.GrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.ls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLs([NotNull] RedTraceParser.LsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.ls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLs([NotNull] RedTraceParser.LsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.neq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNeq([NotNull] RedTraceParser.NeqContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.neq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNeq([NotNull] RedTraceParser.NeqContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.leq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeq([NotNull] RedTraceParser.LeqContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.leq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeq([NotNull] RedTraceParser.LeqContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.geq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeq([NotNull] RedTraceParser.GeqContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.geq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeq([NotNull] RedTraceParser.GeqContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.ball"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBall([NotNull] RedTraceParser.BallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.ball"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBall([NotNull] RedTraceParser.BallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RedTraceParser.nil"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNil([NotNull] RedTraceParser.NilContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RedTraceParser.nil"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNil([NotNull] RedTraceParser.NilContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
